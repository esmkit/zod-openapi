// Bun Snapshot v1, https://goo.gl/fbAQLP

exports[`createDocument should generate a JSON document string: 
      {
        "info": {
          "title": "My API",
          "version": "1.0.0",
        },
        "openapi": "3.1.0",
        "paths": {
          "/jobs": {
            "get": {
              "parameters": [
                {
                  "in": "path",
                  "name": "b",
                  "required": true,
                  "schema": {
                    "type": "string",
                  },
                },
              ],
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "properties": {
                        "a": {
                          "type": "string",
                        },
                      },
                      "required": [
                        "a",
                      ],
                      "type": "object",
                    },
                  },
                },
              },
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "properties": {
                          "a": {
                            "type": "string",
                          },
                        },
                        "required": [
                          "a",
                        ],
                        "type": "object",
                      },
                    },
                  },
                  "description": "200 OK",
                },
              },
            },
          },
        },
      }
     1`] = `
{
  "info": {
    "title": "My API",
    "version": "1.0.0",
  },
  "openapi": "3.1.0",
  "paths": {
    "/jobs": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "b",
            "required": true,
            "schema": {
              "type": "string",
            },
          },
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "a": {
                    "type": "string",
                  },
                },
                "required": [
                  "a",
                ],
                "type": "object",
              },
            },
          },
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "a": {
                      "type": "string",
                    },
                  },
                  "required": [
                    "a",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "200 OK",
          },
        },
      },
    },
  },
}
`;

exports[`createDocument should generate a JSON document string with components: 
      {
        "components": {
          "headers": {
            "my-header": {
              "required": true,
              "schema": {
                "type": "string",
              },
            },
          },
          "parameters": {
            "b": {
              "in": "path",
              "name": "b",
              "required": true,
              "schema": {
                "type": "string",
              },
            },
          },
          "schemas": {
            "a": {
              "type": "string",
            },
          },
        },
        "info": {
          "title": "My API",
          "version": "1.0.0",
        },
        "openapi": "3.1.0",
        "paths": {
          "/jobs": {
            "get": {
              "callbacks": {
                "onData": {
                  "{$request.query.callbackUrl}/data": {
                    "post": {
                      "requestBody": {
                        "content": {
                          "application/json": {
                            "schema": {
                              "properties": {
                                "a": {
                                  "$ref": "#/components/schemas/a",
                                },
                              },
                              "required": [
                                "a",
                              ],
                              "type": "object",
                            },
                          },
                        },
                      },
                      "responses": {
                        "202": {
                          "content": {
                            "application/json": {
                              "schema": {
                                "properties": {
                                  "a": {
                                    "$ref": "#/components/schemas/a",
                                  },
                                },
                                "required": [
                                  "a",
                                ],
                                "type": "object",
                              },
                            },
                          },
                          "description": "200 OK",
                        },
                      },
                    },
                  },
                },
              },
              "parameters": [
                {
                  "$ref": "#/components/parameters/b",
                },
              ],
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "properties": {
                        "a": {
                          "$ref": "#/components/schemas/a",
                        },
                      },
                      "required": [
                        "a",
                      ],
                      "type": "object",
                    },
                  },
                },
              },
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "properties": {
                          "a": {
                            "$ref": "#/components/schemas/a",
                          },
                        },
                        "required": [
                          "a",
                        ],
                        "type": "object",
                      },
                    },
                  },
                  "description": "200 OK",
                  "headers": {
                    "my-header": {
                      "$ref": "#/components/headers/my-header",
                    },
                  },
                },
              },
            },
          },
        },
      }
     1`] = `
{
  "components": {
    "headers": {
      "my-header": {
        "required": true,
        "schema": {
          "type": "string",
        },
      },
    },
    "parameters": {
      "b": {
        "in": "path",
        "name": "b",
        "required": true,
        "schema": {
          "type": "string",
        },
      },
    },
    "schemas": {
      "a": {
        "type": "string",
      },
    },
  },
  "info": {
    "title": "My API",
    "version": "1.0.0",
  },
  "openapi": "3.1.0",
  "paths": {
    "/jobs": {
      "get": {
        "callbacks": {
          "onData": {
            "{$request.query.callbackUrl}/data": {
              "post": {
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "properties": {
                          "a": {
                            "$ref": "#/components/schemas/a",
                          },
                        },
                        "required": [
                          "a",
                        ],
                        "type": "object",
                      },
                    },
                  },
                },
                "responses": {
                  "202": {
                    "content": {
                      "application/json": {
                        "schema": {
                          "properties": {
                            "a": {
                              "$ref": "#/components/schemas/a",
                            },
                          },
                          "required": [
                            "a",
                          ],
                          "type": "object",
                        },
                      },
                    },
                    "description": "200 OK",
                  },
                },
              },
            },
          },
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/b",
          },
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "a": {
                    "$ref": "#/components/schemas/a",
                  },
                },
                "required": [
                  "a",
                ],
                "type": "object",
              },
            },
          },
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "a": {
                      "$ref": "#/components/schemas/a",
                    },
                  },
                  "required": [
                    "a",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "200 OK",
            "headers": {
              "my-header": {
                "$ref": "#/components/headers/my-header",
              },
            },
          },
        },
      },
    },
  },
}
`;

exports[`createDocument should generate a complex JSON document string with components: 
{
  "components": {
    "callbacks": {
      "callback": {
        "{$request.query.callbackUrl}/data": {
          "post": {
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "a": {
                        "type": "string",
                      },
                    },
                    "required": [
                      "a",
                    ],
                    "type": "object",
                  },
                },
              },
            },
            "responses": {
              "202": {
                "description": "202 OK",
              },
            },
          },
        },
      },
    },
    "headers": {
      "my-header": {
        "required": true,
        "schema": {
          "type": "string",
        },
      },
    },
    "parameters": {
      "b": {
        "in": "path",
        "name": "b",
        "required": true,
        "schema": {
          "type": "string",
        },
      },
    },
    "schemas": {
      "a": {
        "type": "string",
      },
      "b": {
        "properties": {
          "a": {
            "type": "string",
          },
        },
        "required": [
          "a",
        ],
        "type": "object",
      },
      "c": {
        "allOf": [
          {
            "$ref": "#/components/schemas/b",
          },
        ],
        "properties": {
          "d": {
            "type": [
              "string",
              "null",
            ],
          },
        },
        "required": [
          "d",
        ],
      },
      "lazy": {
        "items": {
          "$ref": "#/components/schemas/lazy",
        },
        "type": "array",
      },
      "manual": {
        "type": "boolean",
      },
      "post": {
        "properties": {
          "id": {
            "type": "string",
          },
          "user": {
            "$ref": "#/components/schemas/user",
          },
          "userId": {
            "type": "string",
          },
        },
        "required": [
          "id",
          "userId",
        ],
        "type": "object",
      },
      "union-a": {
        "properties": {
          "type": {
            "const": "a",
            "type": "string",
          },
        },
        "required": [
          "type",
        ],
        "type": "object",
      },
      "union-b": {
        "properties": {
          "type": {
            "const": "b",
            "type": "string",
          },
        },
        "required": [
          "type",
        ],
        "type": "object",
      },
      "user": {
        "properties": {
          "id": {
            "type": "string",
          },
          "posts": {
            "items": {
              "$ref": "#/components/schemas/post",
            },
            "type": "array",
          },
        },
        "required": [
          "id",
        ],
        "type": "object",
      },
    },
  },
  "info": {
    "title": "My API",
    "version": "1.0.0",
  },
  "openapi": "3.1.0",
  "paths": {
    "/jobs": {
      "get": {
        "callbacks": {
          "onData": {
            "$ref": "#/components/callbacks/callback",
          },
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/b",
          },
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "a": {
                    "$ref": "#/components/schemas/a",
                  },
                  "b": {
                    "$ref": "#/components/schemas/b",
                  },
                  "c": {
                    "$ref": "#/components/schemas/b",
                  },
                  "d": {
                    "$ref": "#/components/schemas/c",
                  },
                  "e": {
                    "discriminator": {
                      "mapping": {
                        "a": "#/components/schemas/union-a",
                        "b": "#/components/schemas/union-b",
                      },
                      "propertyName": "type",
                    },
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/union-a",
                      },
                      {
                        "$ref": "#/components/schemas/union-b",
                      },
                    ],
                  },
                  "f": {
                    "maxItems": 3,
                    "minItems": 3,
                    "prefixItems": [
                      {
                        "type": "string",
                      },
                      {
                        "type": "number",
                      },
                      {
                        "$ref": "#/components/schemas/manual",
                      },
                    ],
                    "type": "array",
                  },
                  "g": {
                    "$ref": "#/components/schemas/lazy",
                  },
                  "h": {
                    "$ref": "#/components/schemas/user",
                  },
                },
                "required": [
                  "a",
                  "b",
                  "d",
                  "e",
                  "f",
                  "g",
                  "h",
                ],
                "type": "object",
              },
            },
          },
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "a": {
                      "$ref": "#/components/schemas/a",
                    },
                    "b": {
                      "$ref": "#/components/schemas/b",
                    },
                    "c": {
                      "$ref": "#/components/schemas/b",
                    },
                    "d": {
                      "$ref": "#/components/schemas/c",
                    },
                    "e": {
                      "discriminator": {
                        "mapping": {
                          "a": "#/components/schemas/union-a",
                          "b": "#/components/schemas/union-b",
                        },
                        "propertyName": "type",
                      },
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/union-a",
                        },
                        {
                          "$ref": "#/components/schemas/union-b",
                        },
                      ],
                    },
                    "f": {
                      "maxItems": 3,
                      "minItems": 3,
                      "prefixItems": [
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                        {
                          "$ref": "#/components/schemas/manual",
                        },
                      ],
                      "type": "array",
                    },
                    "g": {
                      "$ref": "#/components/schemas/lazy",
                    },
                    "h": {
                      "$ref": "#/components/schemas/user",
                    },
                  },
                  "required": [
                    "a",
                    "b",
                    "d",
                    "e",
                    "f",
                    "g",
                    "h",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "200 OK",
            "headers": {
              "my-header": {
                "$ref": "#/components/headers/my-header",
              },
            },
          },
        },
      },
    },
  },
}
 1`] = `
{
  "components": {
    "callbacks": {
      "callback": {
        "{$request.query.callbackUrl}/data": {
          "post": {
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "a": {
                        "type": "string",
                      },
                    },
                    "required": [
                      "a",
                    ],
                    "type": "object",
                  },
                },
              },
            },
            "responses": {
              "202": {
                "description": "202 OK",
              },
            },
          },
        },
      },
    },
    "headers": {
      "my-header": {
        "required": true,
        "schema": {
          "type": "string",
        },
      },
    },
    "parameters": {
      "b": {
        "in": "path",
        "name": "b",
        "required": true,
        "schema": {
          "type": "string",
        },
      },
    },
    "schemas": {
      "a": {
        "type": "string",
      },
      "b": {
        "properties": {
          "a": {
            "type": "string",
          },
        },
        "required": [
          "a",
        ],
        "type": "object",
      },
      "c": {
        "allOf": [
          {
            "$ref": "#/components/schemas/b",
          },
        ],
        "properties": {
          "d": {
            "type": [
              "string",
              "null",
            ],
          },
        },
        "required": [
          "d",
        ],
      },
      "lazy": {
        "items": {
          "$ref": "#/components/schemas/lazy",
        },
        "type": "array",
      },
      "manual": {
        "type": "boolean",
      },
      "post": {
        "properties": {
          "id": {
            "type": "string",
          },
          "user": {
            "$ref": "#/components/schemas/user",
          },
          "userId": {
            "type": "string",
          },
        },
        "required": [
          "id",
          "userId",
        ],
        "type": "object",
      },
      "union-a": {
        "properties": {
          "type": {
            "const": "a",
            "type": "string",
          },
        },
        "required": [
          "type",
        ],
        "type": "object",
      },
      "union-b": {
        "properties": {
          "type": {
            "const": "b",
            "type": "string",
          },
        },
        "required": [
          "type",
        ],
        "type": "object",
      },
      "user": {
        "properties": {
          "id": {
            "type": "string",
          },
          "posts": {
            "items": {
              "$ref": "#/components/schemas/post",
            },
            "type": "array",
          },
        },
        "required": [
          "id",
        ],
        "type": "object",
      },
    },
  },
  "info": {
    "title": "My API",
    "version": "1.0.0",
  },
  "openapi": "3.1.0",
  "paths": {
    "/jobs": {
      "get": {
        "callbacks": {
          "onData": {
            "$ref": "#/components/callbacks/callback",
          },
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/b",
          },
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "a": {
                    "$ref": "#/components/schemas/a",
                  },
                  "b": {
                    "$ref": "#/components/schemas/b",
                  },
                  "c": {
                    "$ref": "#/components/schemas/b",
                  },
                  "d": {
                    "$ref": "#/components/schemas/c",
                  },
                  "e": {
                    "discriminator": {
                      "mapping": {
                        "a": "#/components/schemas/union-a",
                        "b": "#/components/schemas/union-b",
                      },
                      "propertyName": "type",
                    },
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/union-a",
                      },
                      {
                        "$ref": "#/components/schemas/union-b",
                      },
                    ],
                  },
                  "f": {
                    "maxItems": 3,
                    "minItems": 3,
                    "prefixItems": [
                      {
                        "type": "string",
                      },
                      {
                        "type": "number",
                      },
                      {
                        "$ref": "#/components/schemas/manual",
                      },
                    ],
                    "type": "array",
                  },
                  "g": {
                    "$ref": "#/components/schemas/lazy",
                  },
                  "h": {
                    "$ref": "#/components/schemas/user",
                  },
                },
                "required": [
                  "a",
                  "b",
                  "d",
                  "e",
                  "f",
                  "g",
                  "h",
                ],
                "type": "object",
              },
            },
          },
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "a": {
                      "$ref": "#/components/schemas/a",
                    },
                    "b": {
                      "$ref": "#/components/schemas/b",
                    },
                    "c": {
                      "$ref": "#/components/schemas/b",
                    },
                    "d": {
                      "$ref": "#/components/schemas/c",
                    },
                    "e": {
                      "discriminator": {
                        "mapping": {
                          "a": "#/components/schemas/union-a",
                          "b": "#/components/schemas/union-b",
                        },
                        "propertyName": "type",
                      },
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/union-a",
                        },
                        {
                          "$ref": "#/components/schemas/union-b",
                        },
                      ],
                    },
                    "f": {
                      "maxItems": 3,
                      "minItems": 3,
                      "prefixItems": [
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                        {
                          "$ref": "#/components/schemas/manual",
                        },
                      ],
                      "type": "array",
                    },
                    "g": {
                      "$ref": "#/components/schemas/lazy",
                    },
                    "h": {
                      "$ref": "#/components/schemas/user",
                    },
                  },
                  "required": [
                    "a",
                    "b",
                    "d",
                    "e",
                    "f",
                    "g",
                    "h",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "200 OK",
            "headers": {
              "my-header": {
                "$ref": "#/components/headers/my-header",
              },
            },
          },
        },
      },
    },
  },
}
`;

exports[`createDocument should generate a complex JSON document string with components in 3.0.0: 
{
  "components": {
    "callbacks": {
      "callback": {
        "{$request.query.callbackUrl}/data": {
          "post": {
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "a": {
                        "type": "string",
                      },
                    },
                    "required": [
                      "a",
                    ],
                    "type": "object",
                  },
                },
              },
            },
            "responses": {
              "202": {
                "description": "202 OK",
              },
            },
          },
        },
      },
    },
    "headers": {
      "my-header": {
        "required": true,
        "schema": {
          "type": "string",
        },
      },
    },
    "parameters": {
      "b": {
        "in": "path",
        "name": "b",
        "required": true,
        "schema": {
          "type": "string",
        },
      },
    },
    "schemas": {
      "a": {
        "type": "string",
      },
      "b": {
        "properties": {
          "a": {
            "type": "string",
          },
        },
        "required": [
          "a",
        ],
        "type": "object",
      },
      "c": {
        "allOf": [
          {
            "$ref": "#/components/schemas/b",
          },
        ],
        "properties": {
          "d": {
            "nullable": true,
            "type": "string",
          },
        },
        "required": [
          "d",
        ],
      },
      "lazy": {
        "items": {
          "$ref": "#/components/schemas/lazy",
        },
        "type": "array",
      },
      "manual": {
        "type": "boolean",
      },
      "post": {
        "properties": {
          "id": {
            "type": "string",
          },
          "user": {
            "$ref": "#/components/schemas/user",
          },
          "userId": {
            "type": "string",
          },
        },
        "required": [
          "id",
          "userId",
        ],
        "type": "object",
      },
      "union-a": {
        "properties": {
          "type": {
            "enum": [
              "a",
            ],
            "type": "string",
          },
        },
        "required": [
          "type",
        ],
        "type": "object",
      },
      "union-b": {
        "properties": {
          "type": {
            "enum": [
              "b",
            ],
            "type": "string",
          },
        },
        "required": [
          "type",
        ],
        "type": "object",
      },
      "user": {
        "properties": {
          "id": {
            "type": "string",
          },
          "posts": {
            "items": {
              "$ref": "#/components/schemas/post",
            },
            "type": "array",
          },
        },
        "required": [
          "id",
        ],
        "type": "object",
      },
    },
  },
  "info": {
    "title": "My API",
    "version": "1.0.0",
  },
  "openapi": "3.0.0",
  "paths": {
    "/jobs": {
      "get": {
        "callbacks": {
          "onData": {
            "$ref": "#/components/callbacks/callback",
          },
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/b",
          },
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "a": {
                    "$ref": "#/components/schemas/a",
                  },
                  "b": {
                    "$ref": "#/components/schemas/b",
                  },
                  "c": {
                    "$ref": "#/components/schemas/b",
                  },
                  "d": {
                    "$ref": "#/components/schemas/c",
                  },
                  "e": {
                    "discriminator": {
                      "mapping": {
                        "a": "#/components/schemas/union-a",
                        "b": "#/components/schemas/union-b",
                      },
                      "propertyName": "type",
                    },
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/union-a",
                      },
                      {
                        "$ref": "#/components/schemas/union-b",
                      },
                    ],
                  },
                  "f": {
                    "items": {
                      "oneOf": [
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                        {
                          "$ref": "#/components/schemas/manual",
                        },
                      ],
                    },
                    "maxItems": 3,
                    "minItems": 3,
                    "type": "array",
                  },
                  "g": {
                    "$ref": "#/components/schemas/lazy",
                  },
                  "h": {
                    "$ref": "#/components/schemas/user",
                  },
                },
                "required": [
                  "a",
                  "b",
                  "d",
                  "e",
                  "f",
                  "g",
                  "h",
                ],
                "type": "object",
              },
            },
          },
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "a": {
                      "$ref": "#/components/schemas/a",
                    },
                    "b": {
                      "$ref": "#/components/schemas/b",
                    },
                    "c": {
                      "$ref": "#/components/schemas/b",
                    },
                    "d": {
                      "$ref": "#/components/schemas/c",
                    },
                    "e": {
                      "discriminator": {
                        "mapping": {
                          "a": "#/components/schemas/union-a",
                          "b": "#/components/schemas/union-b",
                        },
                        "propertyName": "type",
                      },
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/union-a",
                        },
                        {
                          "$ref": "#/components/schemas/union-b",
                        },
                      ],
                    },
                    "f": {
                      "items": {
                        "oneOf": [
                          {
                            "type": "string",
                          },
                          {
                            "type": "number",
                          },
                          {
                            "$ref": "#/components/schemas/manual",
                          },
                        ],
                      },
                      "maxItems": 3,
                      "minItems": 3,
                      "type": "array",
                    },
                    "g": {
                      "$ref": "#/components/schemas/lazy",
                    },
                    "h": {
                      "$ref": "#/components/schemas/user",
                    },
                  },
                  "required": [
                    "a",
                    "b",
                    "d",
                    "e",
                    "f",
                    "g",
                    "h",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "200 OK",
            "headers": {
              "my-header": {
                "$ref": "#/components/headers/my-header",
              },
            },
          },
        },
      },
    },
  },
}
 1`] = `
{
  "components": {
    "callbacks": {
      "callback": {
        "{$request.query.callbackUrl}/data": {
          "post": {
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "a": {
                        "type": "string",
                      },
                    },
                    "required": [
                      "a",
                    ],
                    "type": "object",
                  },
                },
              },
            },
            "responses": {
              "202": {
                "description": "202 OK",
              },
            },
          },
        },
      },
    },
    "headers": {
      "my-header": {
        "required": true,
        "schema": {
          "type": "string",
        },
      },
    },
    "parameters": {
      "b": {
        "in": "path",
        "name": "b",
        "required": true,
        "schema": {
          "type": "string",
        },
      },
    },
    "schemas": {
      "a": {
        "type": "string",
      },
      "b": {
        "properties": {
          "a": {
            "type": "string",
          },
        },
        "required": [
          "a",
        ],
        "type": "object",
      },
      "c": {
        "allOf": [
          {
            "$ref": "#/components/schemas/b",
          },
        ],
        "properties": {
          "d": {
            "nullable": true,
            "type": "string",
          },
        },
        "required": [
          "d",
        ],
      },
      "lazy": {
        "items": {
          "$ref": "#/components/schemas/lazy",
        },
        "type": "array",
      },
      "manual": {
        "type": "boolean",
      },
      "post": {
        "properties": {
          "id": {
            "type": "string",
          },
          "user": {
            "$ref": "#/components/schemas/user",
          },
          "userId": {
            "type": "string",
          },
        },
        "required": [
          "id",
          "userId",
        ],
        "type": "object",
      },
      "union-a": {
        "properties": {
          "type": {
            "enum": [
              "a",
            ],
            "type": "string",
          },
        },
        "required": [
          "type",
        ],
        "type": "object",
      },
      "union-b": {
        "properties": {
          "type": {
            "enum": [
              "b",
            ],
            "type": "string",
          },
        },
        "required": [
          "type",
        ],
        "type": "object",
      },
      "user": {
        "properties": {
          "id": {
            "type": "string",
          },
          "posts": {
            "items": {
              "$ref": "#/components/schemas/post",
            },
            "type": "array",
          },
        },
        "required": [
          "id",
        ],
        "type": "object",
      },
    },
  },
  "info": {
    "title": "My API",
    "version": "1.0.0",
  },
  "openapi": "3.0.0",
  "paths": {
    "/jobs": {
      "get": {
        "callbacks": {
          "onData": {
            "$ref": "#/components/callbacks/callback",
          },
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/b",
          },
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "a": {
                    "$ref": "#/components/schemas/a",
                  },
                  "b": {
                    "$ref": "#/components/schemas/b",
                  },
                  "c": {
                    "$ref": "#/components/schemas/b",
                  },
                  "d": {
                    "$ref": "#/components/schemas/c",
                  },
                  "e": {
                    "discriminator": {
                      "mapping": {
                        "a": "#/components/schemas/union-a",
                        "b": "#/components/schemas/union-b",
                      },
                      "propertyName": "type",
                    },
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/union-a",
                      },
                      {
                        "$ref": "#/components/schemas/union-b",
                      },
                    ],
                  },
                  "f": {
                    "items": {
                      "oneOf": [
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                        {
                          "$ref": "#/components/schemas/manual",
                        },
                      ],
                    },
                    "maxItems": 3,
                    "minItems": 3,
                    "type": "array",
                  },
                  "g": {
                    "$ref": "#/components/schemas/lazy",
                  },
                  "h": {
                    "$ref": "#/components/schemas/user",
                  },
                },
                "required": [
                  "a",
                  "b",
                  "d",
                  "e",
                  "f",
                  "g",
                  "h",
                ],
                "type": "object",
              },
            },
          },
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "a": {
                      "$ref": "#/components/schemas/a",
                    },
                    "b": {
                      "$ref": "#/components/schemas/b",
                    },
                    "c": {
                      "$ref": "#/components/schemas/b",
                    },
                    "d": {
                      "$ref": "#/components/schemas/c",
                    },
                    "e": {
                      "discriminator": {
                        "mapping": {
                          "a": "#/components/schemas/union-a",
                          "b": "#/components/schemas/union-b",
                        },
                        "propertyName": "type",
                      },
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/union-a",
                        },
                        {
                          "$ref": "#/components/schemas/union-b",
                        },
                      ],
                    },
                    "f": {
                      "items": {
                        "oneOf": [
                          {
                            "type": "string",
                          },
                          {
                            "type": "number",
                          },
                          {
                            "$ref": "#/components/schemas/manual",
                          },
                        ],
                      },
                      "maxItems": 3,
                      "minItems": 3,
                      "type": "array",
                    },
                    "g": {
                      "$ref": "#/components/schemas/lazy",
                    },
                    "h": {
                      "$ref": "#/components/schemas/user",
                    },
                  },
                  "required": [
                    "a",
                    "b",
                    "d",
                    "e",
                    "f",
                    "g",
                    "h",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "200 OK",
            "headers": {
              "my-header": {
                "$ref": "#/components/headers/my-header",
              },
            },
          },
        },
      },
    },
  },
}
`;

exports[`createDocument Supports circular schemas declared in components.schemas: 
      {
        "components": {
          "schemas": {
            "PartialPost": {
              "properties": {
                "id": {
                  "type": "string",
                },
                "user": {
                  "$ref": "#/components/schemas/User",
                },
                "userId": {
                  "type": "string",
                },
                "user_fields": {
                  "$ref": "#/components/schemas/PartialUser",
                },
              },
              "type": "object",
            },
            "PartialUser": {
              "properties": {
                "comments": {
                  "items": {
                    "$ref": "#/components/schemas/Post",
                  },
                  "type": "array",
                },
                "comments_fields": {
                  "items": {
                    "$ref": "#/components/schemas/PartialPost",
                  },
                  "type": "array",
                },
                "id": {
                  "type": "string",
                },
                "posts": {
                  "items": {
                    "$ref": "#/components/schemas/Post",
                  },
                  "type": "array",
                },
                "posts_fields": {
                  "items": {
                    "$ref": "#/components/schemas/PartialPost",
                  },
                  "type": "array",
                },
              },
              "type": "object",
            },
            "Post": {
              "properties": {
                "id": {
                  "type": "string",
                },
                "user": {
                  "$ref": "#/components/schemas/User",
                },
                "userId": {
                  "type": "string",
                },
                "user_fields": {
                  "$ref": "#/components/schemas/PartialUser",
                },
              },
              "required": [
                "id",
                "userId",
              ],
              "type": "object",
            },
            "User": {
              "properties": {
                "comments": {
                  "items": {
                    "$ref": "#/components/schemas/Post",
                  },
                  "type": "array",
                },
                "comments_fields": {
                  "items": {
                    "$ref": "#/components/schemas/PartialPost",
                  },
                  "type": "array",
                },
                "id": {
                  "type": "string",
                },
                "posts": {
                  "items": {
                    "$ref": "#/components/schemas/Post",
                  },
                  "type": "array",
                },
                "posts_fields": {
                  "items": {
                    "$ref": "#/components/schemas/PartialPost",
                  },
                  "type": "array",
                },
              },
              "required": [
                "id",
              ],
              "type": "object",
            },
          },
        },
        "info": {
          "title": "My API",
          "version": "1.0.0",
        },
        "openapi": "3.1.0",
        "paths": {
          "/post": {
            "get": {
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/Post",
                      },
                    },
                  },
                  "description": "200 OK",
                },
              },
            },
          },
          "/user": {
            "get": {
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/User",
                      },
                    },
                  },
                  "description": "200 OK",
                },
              },
            },
            "post": {
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/User",
                    },
                  },
                },
              },
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/User",
                      },
                    },
                  },
                  "description": "200 OK",
                },
              },
            },
          },
        },
      }
     1`] = `
{
  "components": {
    "schemas": {
      "PartialPost": {
        "properties": {
          "id": {
            "type": "string",
          },
          "user": {
            "$ref": "#/components/schemas/User",
          },
          "userId": {
            "type": "string",
          },
          "user_fields": {
            "$ref": "#/components/schemas/PartialUser",
          },
        },
        "type": "object",
      },
      "PartialUser": {
        "properties": {
          "comments": {
            "items": {
              "$ref": "#/components/schemas/Post",
            },
            "type": "array",
          },
          "comments_fields": {
            "items": {
              "$ref": "#/components/schemas/PartialPost",
            },
            "type": "array",
          },
          "id": {
            "type": "string",
          },
          "posts": {
            "items": {
              "$ref": "#/components/schemas/Post",
            },
            "type": "array",
          },
          "posts_fields": {
            "items": {
              "$ref": "#/components/schemas/PartialPost",
            },
            "type": "array",
          },
        },
        "type": "object",
      },
      "Post": {
        "properties": {
          "id": {
            "type": "string",
          },
          "user": {
            "$ref": "#/components/schemas/User",
          },
          "userId": {
            "type": "string",
          },
          "user_fields": {
            "$ref": "#/components/schemas/PartialUser",
          },
        },
        "required": [
          "id",
          "userId",
        ],
        "type": "object",
      },
      "User": {
        "properties": {
          "comments": {
            "items": {
              "$ref": "#/components/schemas/Post",
            },
            "type": "array",
          },
          "comments_fields": {
            "items": {
              "$ref": "#/components/schemas/PartialPost",
            },
            "type": "array",
          },
          "id": {
            "type": "string",
          },
          "posts": {
            "items": {
              "$ref": "#/components/schemas/Post",
            },
            "type": "array",
          },
          "posts_fields": {
            "items": {
              "$ref": "#/components/schemas/PartialPost",
            },
            "type": "array",
          },
        },
        "required": [
          "id",
        ],
        "type": "object",
      },
    },
  },
  "info": {
    "title": "My API",
    "version": "1.0.0",
  },
  "openapi": "3.1.0",
  "paths": {
    "/post": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Post",
                },
              },
            },
            "description": "200 OK",
          },
        },
      },
    },
    "/user": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User",
                },
              },
            },
            "description": "200 OK",
          },
        },
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User",
              },
            },
          },
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User",
                },
              },
            },
            "description": "200 OK",
          },
        },
      },
    },
  },
}
`;

exports[`createDocument Supports defaultDateSchema option: 
      {
        "components": {
          "schemas": {
            "User": {
              "properties": {
                "id": {
                  "type": "string",
                },
                "timestamp": {
                  "format": "date-time",
                  "type": "string",
                },
              },
              "required": [
                "id",
                "timestamp",
              ],
              "type": "object",
            },
          },
        },
        "info": {
          "title": "My API",
          "version": "1.0.0",
        },
        "openapi": "3.1.0",
        "paths": {
          "/timestamp/:timestamp": {
            "post": {
              "callbacks": {
                "onData": {
                  "{$request.query.callbackUrl}/data": {
                    "post": {
                      "requestBody": {
                        "content": {
                          "application/json": {
                            "schema": {
                              "properties": {
                                "timestamp": {
                                  "format": "date-time",
                                  "type": "string",
                                },
                              },
                              "required": [
                                "timestamp",
                              ],
                              "type": "object",
                            },
                          },
                        },
                      },
                      "responses": {
                        "202": {
                          "content": {
                            "application/json": {
                              "schema": {
                                "properties": {
                                  "timestamp": {
                                    "format": "date-time",
                                    "type": "string",
                                  },
                                },
                                "required": [
                                  "timestamp",
                                ],
                                "type": "object",
                              },
                            },
                          },
                          "description": "200 OK",
                        },
                      },
                    },
                  },
                },
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "timestamp",
                  "required": true,
                  "schema": {
                    "format": "date-time",
                    "type": "string",
                  },
                },
              ],
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "properties": {
                        "timestamp": {
                          "format": "date-time",
                          "type": "string",
                        },
                      },
                      "required": [
                        "timestamp",
                      ],
                      "type": "object",
                    },
                  },
                },
              },
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "properties": {
                          "timestamp": {
                            "format": "date-time",
                            "type": "string",
                          },
                        },
                        "required": [
                          "timestamp",
                        ],
                        "type": "object",
                      },
                    },
                  },
                  "description": "200 OK",
                  "headers": {
                    "timeStamp": {
                      "required": true,
                      "schema": {
                        "format": "date-time",
                        "type": "string",
                      },
                    },
                  },
                },
              },
            },
          },
        },
      }
     1`] = `
{
  "components": {
    "schemas": {
      "User": {
        "properties": {
          "id": {
            "type": "string",
          },
          "timestamp": {
            "format": "date-time",
            "type": "string",
          },
        },
        "required": [
          "id",
          "timestamp",
        ],
        "type": "object",
      },
    },
  },
  "info": {
    "title": "My API",
    "version": "1.0.0",
  },
  "openapi": "3.1.0",
  "paths": {
    "/timestamp/:timestamp": {
      "post": {
        "callbacks": {
          "onData": {
            "{$request.query.callbackUrl}/data": {
              "post": {
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "properties": {
                          "timestamp": {
                            "format": "date-time",
                            "type": "string",
                          },
                        },
                        "required": [
                          "timestamp",
                        ],
                        "type": "object",
                      },
                    },
                  },
                },
                "responses": {
                  "202": {
                    "content": {
                      "application/json": {
                        "schema": {
                          "properties": {
                            "timestamp": {
                              "format": "date-time",
                              "type": "string",
                            },
                          },
                          "required": [
                            "timestamp",
                          ],
                          "type": "object",
                        },
                      },
                    },
                    "description": "200 OK",
                  },
                },
              },
            },
          },
        },
        "parameters": [
          {
            "in": "path",
            "name": "timestamp",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string",
            },
          },
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "timestamp": {
                    "format": "date-time",
                    "type": "string",
                  },
                },
                "required": [
                  "timestamp",
                ],
                "type": "object",
              },
            },
          },
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "timestamp": {
                      "format": "date-time",
                      "type": "string",
                    },
                  },
                  "required": [
                    "timestamp",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "200 OK",
            "headers": {
              "timeStamp": {
                "required": true,
                "schema": {
                  "format": "date-time",
                  "type": "string",
                },
              },
            },
          },
        },
      },
    },
  },
}
`;
